{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nexport const useLocalStorage = (key, initialValue) => {\n  _s();\n\n  const [storedValue, setStoragedValue] = useState(() => {\n    try {\n      const item = window.localStorage.getItem(key);\n      return item ? JSON.parse(key) : initialValue;\n    } catch (error) {\n      return initialValue;\n    }\n  });\n\n  const setValue = value => {\n    try {\n      setStoragedValue(value);\n      window.localStorage.setItem(key, JSON.stringify(value));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return [storedValue, setValue];\n};\n\n_s(useLocalStorage, \"dT894/C76Zdn2XwPnu9/+p5banA=\");","map":{"version":3,"sources":["/Volumes/  Disco Externo/DEVS/Emergya/Formación/Formación React (Chempo)/codigoPrueva/customhooks/src/hooks/useLocalStorage.js"],"names":["useState","useLocalStorage","key","initialValue","storedValue","setStoragedValue","item","window","localStorage","getItem","JSON","parse","error","setValue","value","setItem","stringify","console","log"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;AAEA,OAAO,MAAMC,eAAe,GAAG,CAACC,GAAD,EAAMC,YAAN,KAAuB;AAAA;;AAClD,QAAM,CAACC,WAAD,EAAcC,gBAAd,IAAkCL,QAAQ,CAAC,MAAM;AACnD,QAAI;AACA,YAAMM,IAAI,GAAGC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4BP,GAA5B,CAAb;AACA,aAAOI,IAAI,GAAGI,IAAI,CAACC,KAAL,CAAWT,GAAX,CAAH,GAAqBC,YAAhC;AACH,KAHD,CAGE,OAAOS,KAAP,EAAc;AACZ,aAAOT,YAAP;AACH;AACJ,GAP+C,CAAhD;;AASA,QAAMU,QAAQ,GAAIC,KAAD,IAAW;AACxB,QAAI;AACAT,MAAAA,gBAAgB,CAACS,KAAD,CAAhB;AACAP,MAAAA,MAAM,CAACC,YAAP,CAAoBO,OAApB,CAA4Bb,GAA5B,EAAiCQ,IAAI,CAACM,SAAL,CAAeF,KAAf,CAAjC;AACH,KAHD,CAGE,OAAOF,KAAP,EAAc;AACZK,MAAAA,OAAO,CAACC,GAAR,CAAYN,KAAZ;AACH;AACJ,GAPD;;AASA,SAAO,CAACR,WAAD,EAAcS,QAAd,CAAP;AACH,CApBM;;GAAMZ,e","sourcesContent":["import { useState } from \"react\"\n\nexport const useLocalStorage = (key, initialValue) => {\n    const [storedValue, setStoragedValue] = useState(() => {\n        try {\n            const item = window.localStorage.getItem(key);\n            return item ? JSON.parse(key) : initialValue;\n        } catch (error) {\n            return initialValue;\n        }\n    });\n\n    const setValue = (value) => {\n        try {\n            setStoragedValue(value);\n            window.localStorage.setItem(key, JSON.stringify(value));\n        } catch (error) {   \n            console.log(error);\n        }\n    }\n    \n    return [storedValue, setValue];\n}"]},"metadata":{},"sourceType":"module"}